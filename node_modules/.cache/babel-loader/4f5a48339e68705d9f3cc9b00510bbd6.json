{"ast":null,"code":"var _jsxFileName = \"/Users/adrianacastro/Documents/GitHub/reactnotes/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport Note from './Note/Note';\nimport NoteForm from './NoteForm/NoteForm';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      notes: [//{noteId: 1, noteContent:'note 1'}, \n        //{noteId: 2, noteContent:'note 2'}\n      ]\n    };\n    this.app = firebase.initializeApp(DB_CONFIG);\n    this.db = this.app.database().ref().child('notes');\n    this.addNote = this.addNote.bind(this);\n    this.removeNote = this.removeNote.bind(this);\n  }\n\n  componentDidMount() {\n    const notes = this.state.notes;\n    this.db.on('child_added', snap => {\n      notes.push({\n        noteId: snap.key,\n        noteContent: snap.val().noteContent\n      });\n      this.setState({\n        notes\n      });\n    });\n    this.db.on('child_removed', snap => {\n      for (let i = 0; i < notes.length; i++) {\n        if (notes[i].noteId === snap.key) {\n          notes.splice(i, 1);\n        }\n      }\n\n      console.log(notes);\n      this.setState({\n        notes\n      });\n    });\n  }\n\n  addNote(note) {\n    /*\tlet { notes } = this.state;\n    \t\tnotes.push({\n    \t\t\tnoteId: notes.length + 1,\n    \t\t\tnoteContent: note\n    \t\t});\n    \t\tthis.setState({\n    \t\t\tnotes\n        });*/\n    this.db.push().set({\n      noteContent: note\n    });\n  }\n\n  removeNote(noteId) {\n    this.db.child(noteId).remove();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"notesContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"notesHeader\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \"React y Firebase App\")), React.createElement(\"div\", {\n      className: \"notesBody\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, this.state.notes.map(note => {\n      return React.createElement(Note, {\n        noteContent: note.noteContent,\n        noteId: note.noteId,\n        key: note.noteId,\n        removeNote: this.removeNote,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      });\n    }))), React.createElement(\"div\", {\n      className: \"notesFooter\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(NoteForm, {\n      addNote: this.addNote,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/adrianacastro/Documents/GitHub/reactnotes/src/App.js"],"names":["React","Component","Note","NoteForm","App","constructor","state","notes","app","firebase","initializeApp","DB_CONFIG","db","database","ref","child","addNote","bind","removeNote","componentDidMount","on","snap","push","noteId","key","noteContent","val","setState","i","length","splice","console","log","note","set","remove","render","map"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\n\nimport Note from './Note/Note';\nimport NoteForm from './NoteForm/NoteForm';\n\nclass App extends Component {\n\n  constructor(){\n    super();\n    this.state = {\n      notes:[\n        //{noteId: 1, noteContent:'note 1'}, \n        //{noteId: 2, noteContent:'note 2'}\n      ]\n    };\n  this.app = firebase.initializeApp(DB_CONFIG);\n  this.db = this.app.database().ref().child('notes');\n\n    this.addNote = this.addNote.bind(this)\n    this.removeNote = this.removeNote.bind(this);\n  }\n\n  componentDidMount(){\n    const { notes } = this.state;\n    this.db.on('child_added', snap => {\n      notes.push({\n        noteId: snap.key,\n\t\t\t\tnoteContent: snap.val().noteContent\n      });\n      this.setState({notes});\n    });\nthis.db.on('child_removed', snap => {\n  for (let i = 0; i < notes.length; i++){\n    if (notes[i].noteId === snap.key){\n      notes.splice(i,1);\n    }\n  }\n  console.log(notes);\n  this.setState({notes});\n\n})\n  }\n\n\n\naddNote(note){\n/*\tlet { notes } = this.state;\n\t\tnotes.push({\n\t\t\tnoteId: notes.length + 1,\n\t\t\tnoteContent: note\n\t\t});\n\t\tthis.setState({\n\t\t\tnotes\n    });*/\n    this.db.push().set({noteContent: note});\n\n  }\n\n  removeNote(noteId) {\n\t\tthis.db.child(noteId).remove();\n\t}\n\n\nrender(){\nreturn(\n<div className=\"notesContainer\">\n\n<div className=\"notesHeader\">\n  <h1>React y Firebase App</h1>\n</div>\n\n\n<div className=\"notesBody\">\n  <ul>\n{\n  this.state.notes.map (note => {\n    return(\n      <Note\n      noteContent={note.noteContent}\n      noteId ={note.noteId}\n      key={note.noteId}\n      removeNote={this.removeNote}\n      />\n    )\n  })\n}\n</ul>\n</div>\n\n<div className=\"notesFooter\">\n<NoteForm addNote={this.addNote}/>\n</div>\n\n</div>\n\n)\n}\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}